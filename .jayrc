#---------------------------------------------------------------
# >>>  .jayrc   <<<
#---------------------------------------------------------------
# shell config 


#===============================================================
###                  >>> GLOBALS <<<
#===============================================================
export JAY_SPACE=${HOME}/jaycody     # my github root 
export JAY_USER=${USER}              # me
export JAY_HOME=${HOME}              # ~
export JAMYRIS=${HOME}/repo          # my amyris proj 


#===============================================================
###                >>> SET PATH   <<<
#===============================================================
# Coming from BASH but using oh-my-zsh
PATH="$HOME/bin:/usr/local/bin:$PATH"



#========
# pyenv
#========
# set pyenv to run at every prompt to manage my python environments
# see https://opensource.com/article/19/6/python-virtual-environments-mac
# and see: https://opensource.com/article/19/5/python-3-default-mac
# if command -v pyenv 1>/dev/null 2>&1; then
#  eval "$(pyenv init -)"
# fi


# zlib compression algorithm (related to pyenv) 
## For compilers to find zlib you may need to set:
# export LDFLAGS="-L/usr/local/opt/zlib/lib -L/usr/local/opt/sqlite/lib"
# export CPPFLAGS="-I/usr/local/opt/zlib/include -I/usr/local/opt/sqlite/include"

# For pkg-config to find zlib you may need to set:
# export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig"

# virtualenvwrapper:
# VIRTUALENVWRAPPER_PYTHON=~/.pyenv/versions/3.10.3/bin/python3
# Use virtual environments to isolate dependency management on a per-project basis
# We want to regularly go to our virtual environment directory
# export WORKON_HOME=~/.virtualenvs
# If in a given virtual environment, make a virtual environment directory
# If one does not already exist
# mkdir -p $WORKON_HOME
# Activate the new virtual environment by calling this script
# Note that $USER will substitute for your current user
#. ~/.pyenv/versions/3.10.3/bin/virtualenvwrapper.sh

#=========







# Path to pip, pip2, and pip2.7
alias pip=pip3

# Set PYTHON path
PATH="/Users/jstephens/Library/Python/3.9/bin:$PATH"

#### ARCHIVE PATHS #####
# PATH="$HOME/Library/Python/2.7/bin:$PATH"
# PATH="/usr/local/opt/python/libexec/bin:$PATH"

# PATH="/usr/local/lib/python3.8/site-packages:$PATH"
# PATH="/usr/local/lib/python3.9/site-packages:$PATH"
# PATH="/usr/local/lib/python3.10/site-packages:$PATH"

# 'gnubin' dir so I can use gsed as 'sed'
# PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"

# Homebrew's "sbin"
# PATH="/usr/local/sbin:$PATH"

# PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
# PATH="/usr/local/opt/python@3.8/bin:$PATH"
# PATH="/usr/local/opt/python@3.9/bin:$PATH"
# PATH="/usr/local/opt/python@3.10/bin:$PATH"
#### ARCHIVED PATHS ####

export PATH


#===============================================================
###                  >>> TOOLS <<<
#===============================================================
# network tools
alias mtr=/usr/local/sbin/mtr
alias starwars="nc towel.blinkenlights.nl 23"
alias niko="echo 'nom nom nom'"
alias niki="for n in {1..5000}; do niko ${n}; done"

#---------------------------------------------------------------
#   >>>   Refresh me RESH     <<<
#---------------------------------------------------------------
# Set resh for either .bashrc or .zshrc
if [ -f $HOME/.bashrc ]; then
	alias resh='source ~/.bashrc'
else
	alias resh='source ~/.zshrc'
fi


#---------------------------------------------------------------
#   >>>   Take me to....    <<<
#---------------------------------------------------------------
# My repos
alias org='cd ${JAY_HOME}/Dropbox/_APPS/orgmode; lr'
alias jaycody='cd ${JAY_SPACE}; tree --dirsfirst -a -L 2 -I .get; l'
alias jayci='cd ${JAY_SPACE}/jayci; l; tree --dirsfirst -a -I .git'
alias snapcap='cd ${JAY_SPACE}/snapcap; l; tree --dirsfirst -a -I .git; . ./snapcap.cfg'
alias jayutil='cd ${JAY_SPACE}/jayutil; lsd'
alias pshape='cd ${JAY_SPACE}/pshape-studio; l; tree --dirsfirst -a -L 2 -I .git;'
alias ..='cd ..'

# Take me to Amyris Repo
alias repo='cd ${JAMYRIS}; l; tree --dirsfirst -a -L 2'
alias repocm='cd ${JAMYRIS}/configuration-management; l; tree --dirsfirst -a -I .git -L 2'
alias handbook='cd ${JAMYRIS}/devops-handbook; l; tree --dirsfirst -a -I .git'
alias datadog='cd  ${JAMYRIS}/datadog; l; tree --dirsfirst -a -L 2'


#---------------------------------------------------------------
#   >>>  Edit configs   <<<
#---------------------------------------------------------------
alias vimjrc='vim ${JAY_SPACE}/jayci/.jayrc'
alias vimconfig='vim ${JAY_SPACE}/jayci/jayci.cfg'
alias vimutil='vim ${JAY_SPACE}/jayci/scripts/jayci_utilities.sh'
alias vimvimrc='vim ${JAY_SPACE}/jayci/.vimrc'

alias vimzrc='vim ${HOME}/.zshrc'
alias vimorg='vim ${HOME}/.emacs.d/init.el'


#---------------------------------------------------------------
# >>> depracated configs #nostaliga
#---------------------------------------------------------------
# alias vimsh='vim ${HOME}/.bash_profile'    # from Owen's bbsh 20130403
# alias vimarc='vim ${HOME}/.amyrisrc'       # from Rob MacGowan
alias ssh="ssh -A" # Forward the authentication agent (from Brian at Pado)



#---------------------------------------------------------------
#    >>> Safety and Convenience <<< 
#---------------------------------------------------------------
# Confirm first
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# Show usage as human-readable, include total
alias du='du -ch'                   # disk used plus total    
alias df='df -h'                    # disk free
alias dirsize="pwd; du -ch | grep total"

# Make dirs along path 
alias mkdir='mkdir -p'

# Show me, paint the fence
alias h='history'                    # shell history
alias path='echo -e ${PATH//:/\\n}'  # path as single col
alias gitlog='git log --oneline --graph'     # gits by single line

# Please....
alias restart='sudo shutdown -r now'
alias sleep='sudo shutdown -s now'

# Update packages
alias update="brew update; brew upgrade; brew cleanup;
              pip install --upgrade `pip list --outdated | awk 'NR>2 {print $1}'`"
### fetch newest brew; upgrade outdated packages; upgrade all casks; clean up outdated dowloads of previous package versions;
###   output installed pip packages currently outdated and upgrade them


#---------------------------------------------------------------
#     >>> the 'ls' family <<< 
#---------------------------------------------------------------
# List sizes as human-readable
alias ls='ls -hF'

# Sort lists by...(show hidden, long format, exclude groups)
alias lk='ls -AlSro'      # Size, biggest last.
alias lt='ls -Altro'      # Date, most recent last.
alias lc='ls -Altcro'     # Change, most recent last.

# Show more, sort alphanumerically
alias l='ls -A1'          # Single col, show .dot files,  show '/', '*'
alias la='ls -A'          # Show .dot files, '/' dirs
alias ll='ls -Alo'        # Show hidden, long format, '/' dirs, no group,
alias lal='ls -al'        # Show hidden and long
alias lsd='\ls -A1 -d */' # Directories only

# List recursively
alias lr='ls -R'          # Recursively
alias tree='tree -Csh'    # Recursively as tree 
alias treela='tree -Csha' # As tree, include hidden


#---------------------------------------------------------------
#       >>> Show Aliases and Common Usage  <<<
#---------------------------------------------------------------
# List all aliases
alias lalias='grep alias ${JAY_HOME}/.jayrc'

# List the 'ls' family
alias lsls="grep 'alias l' ${JAY_HOME}/.jayrc"


# 'jay' to list common usage 
alias jay='echo     ;
echo ;
echo lalias:  \\t list aliases;
echo lsls:    \\t\\t list the 'ls' family;
echo ;
echo -----------TAKE ME TO....-------------;
echo jaycody jayci repo repocm; 
echo code foo: open foo in VSCode;
echo ;
echo -----------VIM-------------;
echo vimjrc, vimjconfig, vimjutil, vimvimrc, vimzrc;
echo :StripWhitespace in vim;
echo ;
echo -----------INFO-------------;
echo h=history, path, gitlog;
echo du, df, dirsize -- disk used, disk free, dirsize;
echo env -- show environment variables
echo ;
echo -----------LIST-------------;
echo lk, lt, lc: size, date, change date, big and new last;
echo l, la, ll, lal;
echo lsd: dir only;
echo lr: recursively;
echo ;
echo -----------FREQUENT COMMANDS-------------;
echo grep: \\t search inside a file;
echo find: \\t search FOR a file;
echo whereis:  ex. whereis python = ;
echo rm -rf: remove directory and all files therein, without asking permission;
echo cp -r: \\t copy directory and all files therein;
echo mkdir -p: make mutliptle directories along the path as needed;
echo ">" : \\t  takes output of command at left and WRITES it to file on right;
echo \\t -----ex  cat my.txt ">" your.txt;
echo \\t ----- OR write directly to a file:  cat ">" foo.txt;
echo ;
echo ----------------NETWORK----------------------;
echo ping, ifconfig, ip addr, ip rout, dig;
echo nmap, nikto, dnsmap;
echo ;
echo ----------------FILESYSTEM----------------------;
echo cat: /etc/lsb-release  -- distribution;
echo cat: /proc/cpuinfo     -- how many cpus;
echo free                     -- tell me about your RAM;
echo pushd \\t Like 'cd' but also adds to directory stack; 
echo pushd +0 \\t list pushd directory stack;
echo popd \\ removes dirs from the directory stack;
echo dirs -v \\t view pushd dir stack AND list their index. Index 0 = current location;
echo ;'

#---------------------------------------------------------------


#---------------------------------------------------------------
#       >>>  FUNCTIONS   <<<
#---------------------------------------------------------------

#------------Jump to workspace, then jump back------------------
# Remember where you came from, then jump to workspace
function src () {
    pushd . $@ > /dev/null
    cd ${JAY_SPACE}
}

# Come right back
function unsrc () {
    cd ~1
}
#---------------------------------------------------------------



echo ""
echo ""
echo "================================================================="
echo "SHELL CONFIG STEPS"
echo "================================================================="
if [ -f $HOME/.bashrc ]; then
	echo '\t  IN ~/.bashrc --> $ source ~/.jayrc'
else
    echo "[1] .zshrc ---> do:"
	echo '\t $ source ~/.oh-my-zsh'
	echo '\t $ source ~/.jayrc@ -> JAY_SPACE/jayci/.jayrc'
fi
echo ""
echo '[2] .jayrc ---> do:'
echo '\tPATH & GLOBALS\n\taliases'
echo '\tsource proj .cfg' 
echo '-----------------------------------------------------------------'


#---------------------------------------------------------------
#       >>>  SOURCE all <project>.cfg   <<<
#---------------------------------------------------------------
if [ -d ${JAY_SPACE:?} ] && [ "$(ls -A ${JAY_SPACE})" ] ; then
    for i in $( ls -1 ${JAY_SPACE}/*/*.cfg|egrep -v "nose|setup" );  do # printf "===> %-30s .jayrc ---sources---> $i \n";# 
         # Walk jaycody/ ; source each <project>/*.cfg ; let each .cfg list files they source.
         echo ""
         echo ""
         #echo "-----------------------------------------------------------------"
         echo "================================================================="
         echo ".jayrc --> $ source $i"
         echo "================================================================="
         source $i;
         done
else
    echo "There are no .cfg files in your JAY_SPACE repos."
fi
#===============================================================


# The next line updates PATH for the Google Cloud SDK.
# if [ -f '/Applications/google-cloud-sdk/path.zsh.inc' ]; then . '/Applications/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
# if [ -f '/Applications/google-cloud-sdk/completion.zsh.inc' ]; then . '/Applications/google-cloud-sdk/completion.zsh.inc'; fi
